

# version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_USER: bankolejohn
      POSTGRES_PASSWORD: password123  # Change to a stronger password in production!
      POSTGRES_DB: bankolejohn
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./db/init.sh:/docker-entrypoint-initdb.d/init.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bankolejohn -d bankolejohn"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_backend
    env_file: 
      - ./backend/.env  # Load all environment variables from file
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 #   /bin/sh -c "./prestart.sh && poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    
    volumes:
      - ./backend:/app
      - /app/__pycache__  # Exclude Python cache
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://backend:8000  # For local development
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Preserve dependencies
    command: npm run dev
    networks:
      - app-network


  nginx:
    image: nginx:alpine  # More lightweight than 'latest'
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # More standard path
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge